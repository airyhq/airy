name: CI

on:
  push: {}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - uses: joschi/setup-jdk@v2
        with:
          java-version: '11'
          architecture: 'x64'

      - name: Mount bazel cache
        uses: actions/cache@v2
        with:
          path: |
            /home/runner/.cache/bazel
            /home/runner/.cache/bazel_external
          key: bazel

      - name: Install bazelisk
        run: |
          curl -LO "https://github.com/bazelbuild/bazelisk/releases/download/v1.1.0/bazelisk-linux-amd64"
          mkdir -p "${GITHUB_WORKSPACE}/bin/"
          mv bazelisk-linux-amd64 "${GITHUB_WORKSPACE}/bin/bazel"
          chmod +x "${GITHUB_WORKSPACE}/bin/bazel"

      - name: Enable CI settings
        run: |
          cat <<EOF >>.bazelrc
            common --config=ci
          EOF

      - name: Lint
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" run //:check

      - name: Test
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" test //...

      - name: Build all artifacts
        run: |
          "${GITHUB_WORKSPACE}/bin/bazel" build //...

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Deploy component library showcase
        if: ${{github.ref == 'refs/heads/main'}}
        run: bazel run //frontend/showcase:deploy

      - name: Publish component library to npm
        if: ${{ startsWith(github.ref, 'refs/tags/npm-v') }}
        run: |
          sudo apt-get install -y expect
          bazel run //frontend/components:publish-npm release
        env:
          DEPLOY_NPM_USERNAME: ${{ secrets.DEPLOY_NPM_USERNAME }}
          DEPLOY_NPM_PASSWORD: ${{ secrets.DEPLOY_NPM_PASSWORD }}
          DEPLOY_NPM_EMAIL: ${{ secrets.DEPLOY_NPM_EMAIL }}
