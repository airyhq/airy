apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.component }}
  labels:
    app: {{ .Values.component }}
    core.airy.co/managed: "true"
    core.airy.co/mandatory: "{{ .Values.mandatory }}"
    core.airy.co/component: {{ .Values.component }}
spec:
  replicas: {{ if .Values.enabled }} 1 {{ else }} 0 {{ end }}
  selector:
    matchLabels:
      app: {{ .Values.component }}
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: {{ .Values.component }}
    spec:
      containers:
        - name: app
          image: "{{ .Values.global.containerRegistry}}/{{ .Values.image }}:{{ default .Chart.Version }}"
          imagePullPolicy: Always
          envFrom:
            - configMapRef:
                name: security
            - configMapRef:
                name: kafka-config
          env:
            - name: IBMWATSONASSISTANT_URL
              valueFrom:
                configMapKeyRef:
                  key: ibm-watson-assistant.URL
                  name: {{ .Values.component }}
            - name: IBMWATSONASSISTANT_APIKEY
              valueFrom:
                configMapKeyRef:
                  key: ibm-watson-assistant.apiKey
                  name: {{ .Values.component }}
            - name: IBMWATSONASSISTANT_ASSISTANTID
              valueFrom:
                configMapKeyRef:
                  key: ibm-watson-assistant.assistantId
                  name: {{ .Values.component }}
            - name: SERVICE_NAME
              value: {{ .Values.component }}
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: REQUESTED_CPU
              valueFrom:
                resourceFieldRef:
                  containerName: app
                  resource: requests.cpu
            - name: LIMIT_CPU
              valueFrom:
                resourceFieldRef:
                  containerName: app
                  resource: limits.cpu
            - name: LIMIT_MEMORY
              valueFrom:
                resourceFieldRef:
                  containerName: app
                  resource: limits.memory
          livenessProbe:
            httpGet:
              path: /actuator/health
              port: 8080
              httpHeaders:
                - name: Health-Check
                  value: health-check
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 3
      volumes:
        - name: {{ .Values.component }}
          configMap:
            name: {{ .Values.component }}
