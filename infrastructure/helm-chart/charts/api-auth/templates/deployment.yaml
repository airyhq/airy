apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-auth
  namespace: default
  labels:
    app: api-auth
spec:
  replicas: 0
  selector:
    matchLabels:
      app: api-auth
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: api-auth
    spec:
      containers:
      - name: app
        image: "{{ .Values.image }}:{{ .Values.global.appImageTag }}"
        imagePullPolicy: Always
        envFrom:
          - configMapRef:
              name: user-config
        env:
        - name: SERVICE_NAME
          value: api-auth
        - name: DB_USERNAME
          value: postgresadmin
        - name: DB_PASSWORD
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_PASSWORD
        - name: DB_ENDPOINT
          value: postgres:5432
        - name: JWT_SECRET
          valueFrom:
            configMapKeyRef:
              name: secrets-config
              key: JWT_SECRET
        livenessProbe:
          httpGet:
            path: /actuator/health
            port: 8080
            httpHeaders:
              - name: Health-Check
                value: health-check
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 3
