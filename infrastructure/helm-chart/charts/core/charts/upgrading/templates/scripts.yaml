apiVersion: v1
kind: ConfigMap
metadata:
  name: upgrading-scripts
  namespace: {{ .Values.global.kubernetes.namespace }}
data:
  scale-down-deployment.sh: |
    #!/bin/sh
    deployment=${DEPLOYMENT_NAME}

    kubectl scale deployment ${deployment} --replicas=0

  scale-down-statefulset.sh: |
    #!/bin/sh
    statefulset=${STATEFULSET_NAME}

    kubectl scale statefulset ${statefulset} --replicas=0

  wait-for-empty-consumer-group.sh: |
    #!/bin/sh
    kafka_brokers=${KAFKA_BROKERS:-kafka:9092}
    consumer_group=${CONSUMER_GROUP}
    delay=${1:-5}

    if kafka-consumer-groups.sh --bootstrap-server ${kafka_brokers} --list | grep -q ${consumer_group}
    then
      while ! kafka-consumer-groups.sh --bootstrap-server ${kafka_brokers} --group ${consumer_group} --describe 2>&1 | grep -q "has no active members"
      do
        echo "Waiting for the consumer group to be empty..."
        sleep ${delay}
      done
    fi

  reset-streaming-app.sh: |
    #!/bin/sh
    kafka_brokers=${KAFKA_BROKERS:-kafka:9092}
    consumer_group=${CONSUMER_GROUP:-1}
    input_topics=${INPUT_TOPICS}
    offset=${OFFSET:-to-earliest}

    kafka-streams-application-reset.sh --bootstrap-servers ${kafka_brokers} --${offset} --application-id ${consumer_group} --input-topics ${input_topics}
