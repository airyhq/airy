{{ $protocol := "http"}}
  {{ if .Values.https }}
    {{ $protocol = "https" }}
  {{ end }}
{{ if .Values.host }}
apiVersion: batch/v1
kind: Job
metadata:
  name: update-ingress-hostname
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "11"
    "helm.sh/hook-delete-policy": "hook-succeeded"
  labels:
    core.airy.co/managed: "true"
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      containers:
      - name: update-ingress
        image: "bitnami/kubectl"
        command: ['/bin/sh', '/opt/provisioning/update-ingress-host.sh']
        env:
        - name: HOST
          value: {{ .Values.host }}
        volumeMounts:
        - name: ingress-scripts
          mountPath: /opt/provisioning
      serviceAccountName: {{ .Values.serviceAccount }}
      volumes:
        - name: ingress-scripts
          configMap:
            name: ingress-scripts
      restartPolicy: Never
  backoffLimit: 3
---
apiVersion: batch/v1
kind: Job
metadata:
  name: update-configmap
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "11"
    "helm.sh/hook-delete-policy": "hook-succeeded"
  labels:
    core.airy.co/managed: "true"
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      containers:
      - name: update-ingress
        image: "bitnami/kubectl"
        command: ['/bin/sh', '/opt/provisioning/update-configmap-host.sh']
        env:
        - name: HOST
          value: {{ .Values.host }}
        - name: PROTOCOL
          value: {{ $protocol }}
        volumeMounts:
        - name: ingress-scripts
          mountPath: /opt/provisioning
      serviceAccountName: {{ .Values.serviceAccount }}
      volumes:
        - name: ingress-scripts
          configMap:
            name: ingress-scripts
      restartPolicy: Never
  backoffLimit: 3
{{ else }}
apiVersion: batch/v1
kind: Job
metadata:
  name: update-loadbalancer
  annotations:
    "helm.sh/hook": "post-install,post-upgrade"
    "helm.sh/hook-weight": "11"
    "helm.sh/hook-delete-policy": "hook-succeeded"
  labels:
    core.airy.co/managed: "true"
spec:
  ttlSecondsAfterFinished: 300
  template:
    spec:
      initContainers:
      - name: wait
        image: "bitnami/kubectl"
        command: ["/bin/sh", "/opt/provisioning/wait-for-loadbalancer.sh"]
        volumeMounts:
        - name: ingress-scripts
          mountPath: /opt/provisioning
      - name: update-ingress
        image: "bitnami/kubectl"
        command: ["/bin/sh", "/opt/provisioning/update-ingress-lb.sh"]
        volumeMounts:
        - name: ingress-scripts
          mountPath: /opt/provisioning
      containers:
      - name: update-configmap
        image: "bitnami/kubectl"
        command: ['/bin/sh', '/opt/provisioning/update-configmap-lb.sh']
        env:
        - name: PROTOCOL
          value: {{ $protocol }}
        volumeMounts:
        - name: ingress-scripts
          mountPath: /opt/provisioning
      serviceAccountName: {{ .Values.serviceAccount }}
      volumes:
        - name: ingress-scripts
          configMap:
            name: ingress-scripts
      restartPolicy: Never
  backoffLimit: 3
{{ end }}
