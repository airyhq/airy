apiVersion: v1
kind: Service
metadata:
  annotations:
  {{- range $k, $v := .Values.global.ingress.loadbalancerAnnotations }}
    {{ $k }}: {{ $v }}
  {{- end }}
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/component: controller
  name: ingress-nginx-controller
  namespace: {{ .Values.namespace }}
spec:
  type: LoadBalancer
  externalTrafficPolicy: Local
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: http
      appProtocol: http
  {{ if .Values.global.ingress }}
  {{ if .Values.global.ingress.https }}
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
      appProtocol: https
  {{ end }}
  {{ end }}
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/component: controller
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/component: controller
  name: ingress-nginx-controller-admission
  namespace: {{ .Values.namespace }}
spec:
  type: ClusterIP
  ports:
    - name: http-webhook
      port: 80
      targetPort: webhook
      appProtocol: http
    - name: https-webhook
      port: 443
      targetPort: webhook
      appProtocol: https
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/component: controller
---
{{ if .Values.global.kubernetes.ngrokEnabled }}
kind: Service
apiVersion: v1
metadata:
  name: ingress-node-port
  namespace: {{ .Values.namespace }}
spec:
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      nodePort: 80
      targetPort: 80
      name: web
  selector:
    app.kubernetes.io/name: ingress-nginx
    app.kubernetes.io/instance: ingress-nginx
    app.kubernetes.io/component: controller
{{ end }}