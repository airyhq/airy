apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ .Values.components.frontend.inbox.name }}"
  labels:
    app: "{{ .Values.components.frontend.inbox.name }}"
    type: frontend
    core.airy.co/managed: "true"
    core.airy.co/mandatory: "{{ .Values.components.frontend.inbox.mandatory }}"
    core.airy.co/component: "{{ .Values.components.frontend.inbox.name }}"
  annotations:
    core.airy.co/config-items-mandatory: "API_HOST"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: "{{ .Values.components.frontend.inbox.name }}"
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: "{{ .Values.components.frontend.inbox.name }}"
        WorkerType: "{{ default "NodeGroup" .Values.global.workerType }}"
    spec:
      containers:
      - name: app
        image: "{{ .Values.global.containerRegistry}}/{{ .Values.components.frontend.inbox.image }}:{{ default .Chart.Version .Values.global.appImageTag }}"
        imagePullPolicy: Always
        env:
        {{- if .Values.global.apiHost }}        
        - name: API_HOST
          valueFrom:
            configMapKeyRef:
              name: core-config
              key: API_HOST
        {{- end }}
        envFrom:
          - configMapRef:
              name: "{{ .Values.components.frontend.inbox.name }}"
        livenessProbe:
          httpGet:
            path: /health
            port: 80
            httpHeaders:
            - name: Health-Check
              value: health-check
          initialDelaySeconds: 30
          periodSeconds: 10
          failureThreshold: 3
        resources:
{{ toYaml .Values.components.frontend.inbox.resources | indent 10 }}
      volumes:
        - name: provisioning-scripts
          configMap:
            name: provisioning-scripts
