global:
  redis: {}

image:
  registry: docker.io
  repository: bitnami/redis
  tag: 6.0.9-debian-10-r0
  pullPolicy: IfNotPresent
cluster:
  enabled: true
  slaveCount: 2

  sentinel:
  enabled: false
  usePassword: false
  image:
    registry: docker.io
    repository: bitnami/redis-sentinel
    tag: 6.0.8-debian-10-r55
    pullPolicy: IfNotPresent
  masterSet: mymaster
  initialCheckTimeout: 5
  quorum: 2
  downAfterMilliseconds: 60000
  failoverTimeout: 18000
  parallelSyncs: 1
  port: 26379
  configmap:
  staticID: false
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5
  customLivenessProbe: {}
  customReadinessProbe: {}
  service:
    type: ClusterIP
    sentinelPort: 26379
    redisPort: 6379
    annotations: {}
    labels: {}
    loadBalancerIP:

clusterDomain: cluster.local

networkPolicy:
  enabled: false

  ingressNSMatchLabels: {}
  ingressNSPodMatchLabels: {}

serviceAccount:
  create: false
  name:

rbac:
  create: false

  role:
    rules: []

securityContext:
  enabled: true
  fsGroup: 1001
containerSecurityContext:
  enabled: true
  runAsUser: 1001

usePassword: false
password: ""

usePasswordFile: false

persistence:
  existingClaim:
redisPort: 6379

tls:
  enabled: false
  authClients: true
  certificatesSecret:
  certFilename:
  certKeyFilename:
  certCAFilename:
master:
  command: "/run.sh"
  preExecCmds: ""
  configmap:
  extraFlags: []
  disableCommands:
    - FLUSHDB
    - FLUSHALL

  podLabels: {}
  podAnnotations: {}

  shareProcessNamespace: false
  livenessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 5
    timeoutSeconds: 1
    successThreshold: 1
    failureThreshold: 5

  affinity: {}

  service:
    type: ClusterIP
    port: 6379

  
    annotations: {}
    labels: {}
    loadBalancerIP:
  persistence:
    enabled: true
    path: /data
    subPath: ""
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    matchLabels: {}
    matchExpressions: {}

  statefulset:
    labels: {}
    updateStrategy: RollingUpdate

  priorityClassName: ''


  extraEnvVars: []


  extraEnvVarsCM: []


  extraEnvVarsSecret: []

slave:
  service:
    type: ClusterIP
    port: 6379
    annotations: {}
    labels: {}
    loadBalancerIP:


  port: 6379
  command: "/run.sh"
  preExecCmds: ""
  configmap:
  extraFlags: []
  disableCommands:
    - FLUSHDB
    - FLUSHALL

  affinity: {}
  spreadConstraints: {}

  shareProcessNamespace: false
  livenessProbe:
    enabled: true
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 5
  readinessProbe:
    enabled: true
    initialDelaySeconds: 5
    periodSeconds: 10
    timeoutSeconds: 10
    successThreshold: 1
    failureThreshold: 5

 
  customLivenessProbe: {}
  customReadinessProbe: {}
  podLabels: {}
  podAnnotations: {}

  persistence:
    enabled: true
    path: /data
    subPath: ""
    accessModes:
      - ReadWriteOnce
    size: 8Gi
    matchLabels: {}
    matchExpressions: {}

  statefulset:
    labels: {}
    updateStrategy: RollingUpdate

  extraEnvVars: []

  extraEnvVarsCM: []

  extraEnvVarsSecret: []


metrics:
  enabled: false

  image:
    registry: docker.io
    repository: bitnami/redis-exporter
    tag: 1.12.1-debian-10-r11
    pullPolicy: IfNotPresent
  podAnnotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "9121"

  serviceMonitor:
    enabled: false
    selector:
      prometheus: kube-prometheus

  prometheusRule:
    enabled: false
    additionalLabels: {}
    namespace: ""
    rules: []

  service:
    type: ClusterIP
    annotations: {}
    labels: {}

volumePermissions:
  enabled: false
  image:
    registry: docker.io
    repository: bitnami/minideb
    tag: buster
    pullPolicy: Always
  resources: {}
  securityContext:
    runAsUser: 0

configmap: |-
  # Enable AOF https://redis.io/topics/persistence#append-only-file
  appendonly yes
  # Disable RDB persistence, AOF persistence already enabled.
  save ""

sysctlImage:
  enabled: false
  command: []
  registry: docker.io
  repository: bitnami/minideb
  tag: buster
  pullPolicy: Always
  mountHostSys: false
  resources: {}
podSecurityPolicy:
  create: false

podDisruptionBudget:
  enabled: false
  minAvailable: 1
  # maxUnavailable: 1