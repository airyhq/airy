apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: sources-viber-connector
    app.kubernetes.io/managed-by: Helm
    core.airy.co/component: sources-viber
    core.airy.co/managed: "true"
    core.airy.co/mandatory: "false"
    type: sources
  name: sources-viber-connector
  namespace: default
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  selector:
    matchLabels:
      app: sources-viber-connector
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: sources-viber-connector
    spec:
      containers:
      - env:
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              key: KAFKA_BROKERS
              name: kafka-config
        - name: KAFKA_SCHEMA_REGISTRY_URL
          valueFrom:
            configMapKeyRef:
              key: KAFKA_SCHEMA_REGISTRY_URL
              name: kafka-config
        - name: KAFKA_COMMIT_INTERVAL_MS
          valueFrom:
            configMapKeyRef:
              key: KAFKA_COMMIT_INTERVAL_MS
              name: kafka-config
        - name: authToken
          valueFrom:
            configMapKeyRef:
              key: authToken
              name: sources-viber
        envFrom:
        - configMapRef:
            name: security
        - configMapRef:
            name: hostnames
        image: ghcr.io/airyhq/sources/viber-connector:christophproschel
        imagePullPolicy: Always
        livenessProbe:
          failureThreshold: 3
          httpGet:
            httpHeaders:
            - name: Health-Check
              value: health-check
            path: /actuator/health
            port: 8080
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        name: app
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      dnsPolicy: ClusterFirst
      initContainers:
      - command:
        - /bin/sh
        - /opt/provisioning/wait-for-minimum-kafkas.sh
        env:
        - name: KAFKA_BROKERS
          valueFrom:
            configMapKeyRef:
              key: KAFKA_BROKERS
              name: kafka-config
        - name: REPLICAS
          valueFrom:
            configMapKeyRef:
              key: KAFKA_MINIMUM_REPLICAS
              name: kafka-config
        image: busybox
        imagePullPolicy: Always
        name: wait
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /opt/provisioning
          name: provisioning-scripts
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: provisioning-scripts
        name: provisioning-scripts
---
apiVersion: v1
kind: Service
metadata:
  name: sources-viber-connector
  namespace: default
  labels:
    core.airy.co/prometheus: spring
spec:
  ports:
    - name: web
      port: 80
      targetPort: 8080
      protocol: TCP
  type: NodePort
  selector:
    app: sources-viber-connector
